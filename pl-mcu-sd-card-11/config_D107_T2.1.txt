# global config file for PlasticLogic MSP430 project
# Copyright (C) 2013, 2014 Plastic Logic Limited
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Set this to manually specify the display type when it could not be detected
# at run-time.  This is especially useful for displays without an EEPROM such
# as Type19.  */

display_type D107_T2.1

# Some displays have a scrambled pixel arrangement
# to enable automatic scrambling of the image set scrambling to the display 
# specific value
#	S049_T1.1: 96
#	D054_T1.1: 418
#	S079_T1.1: 32
#	S115_T1.1: 36
#scrambling 0

# PlasticLogic displays may have source line offsets

#Set one of the following to 1 to manually select the platform.
#This will be used no platform can be discovered at runtime.
#	CONFIG_PLAT_RAVEN, /**< Raven board */
#	CONFIG_PLAT_Z6, /**< Hummingbird Z6.x board */
#	CONFIG_PLAT_Z7  /**< Hummingbird Z7.x board */

board CONFIG_PLAT_RAVEN
# Default I2C master mode used with CONFIG_HWINFO_DEFAULT
#	I2C_MODE_NONE = 0,  /* invalid mode */
#	I2C_MODE_HOST,      /* use the host */
#	I2C_MODE_DISP,      /* use SPI-I2C bridge on the display (S1D13541) */
#	I2C_MODE_S1D13524,  /* use SPI-I2C bridge on the S1D13524 */
#	I2C_MODE_SC18IS6XX, /* not currently supported */

i2c_mode I2C_MODE_HOST

# Each display has a type and some associated data such as a VCOM voltage and
# waveform library.  This can either be stored in the display EEPROM or on the
# SD card.  The display type may also be manually specified with
# CONFIG_DISPLAY_TYPE.
#
# Set one of the following values to 1 in order to choose where the data
# should be read from:
#	CONFIG_DISP_DATA_EEPROM_ONLY,  < Only use display EEPROM
#	CONFIG_DISP_DATA_SD_ONLY,      < Only use SD card
#	CONFIG_DISP_DATA_EEPROM_SD,    < Try EEPROM first, then SD card
#	CONFIG_DISP_DATA_SD_EEPROM     < Try SD card first, then EEPROM

data_source CONFIG_DISP_DATA_EEPROM_SD


